{
    "sourceFile": "lib/widgets/pdf_reader_widget.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 12,
            "patches": [
                {
                    "date": 1728145991893,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1728146233698,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,6 @@\n-import 'dart:async';\r\n import 'package:flutter/material.dart';\r\n import 'package:syncfusion_flutter_pdfviewer/pdfviewer.dart';\r\n-import 'package:shared_preferences/shared_preferences.dart';\r\n import '../models/book.dart';\r\n \r\n class PdfReaderWidget extends StatefulWidget {\r\n   final Book book;\r\n@@ -13,69 +11,61 @@\n   _PdfReaderWidgetState createState() => _PdfReaderWidgetState();\r\n }\r\n \r\n class _PdfReaderWidgetState extends State<PdfReaderWidget> {\r\n+  final GlobalKey<SfPdfViewerState> _pdfViewerKey = GlobalKey();\r\n   late PdfViewerController _pdfViewerController;\r\n-  bool _nightMode = false;\r\n+  bool _isNightMode = false;\r\n \r\n   @override\r\n   void initState() {\r\n     super.initState();\r\n     _pdfViewerController = PdfViewerController();\r\n-    _loadLastPage();\r\n-    _loadNightMode();\r\n   }\r\n \r\n-  Future<void> _loadLastPage() async {\r\n-    final prefs = await SharedPreferences.getInstance();\r\n-    final lastPage = prefs.getInt('lastPage_${widget.book.id}') ?? 1;\r\n-    _pdfViewerController.jumpToPage(lastPage);\r\n-  }\r\n-\r\n-  Future<void> _saveLastPage(int page) async {\r\n-    final prefs = await SharedPreferences.getInstance();\r\n-    await prefs.setInt('lastPage_${widget.book.id}', page);\r\n-    widget.book.updateLastPageRead(page);\r\n-  }\r\n-\r\n-  Future<void> _loadNightMode() async {\r\n-    final prefs = await SharedPreferences.getInstance();\r\n-    setState(() {\r\n-      _nightMode = prefs.getBool('nightMode') ?? false;\r\n-    });\r\n-  }\r\n-\r\n-  Future<void> _saveNightMode(bool nightMode) async {\r\n-    final prefs = await SharedPreferences.getInstance();\r\n-    await prefs.setBool('nightMode', nightMode);\r\n-  }\r\n-\r\n   @override\r\n   Widget build(BuildContext context) {\r\n     return Scaffold(\r\n       appBar: AppBar(\r\n         title: Text(widget.book.title),\r\n-        actions: [\r\n+        actions: <Widget>[\r\n           IconButton(\r\n-            icon: Icon(_nightMode ? Icons.brightness_3 : Icons.brightness_7),\r\n+            icon: Icon(_isNightMode ? Icons.brightness_3 : Icons.brightness_7),\r\n             onPressed: () {\r\n               setState(() {\r\n-                _nightMode = !_nightMode;\r\n-                _saveNightMode(_nightMode);\r\n+                _isNightMode = !_isNightMode;\r\n               });\r\n             },\r\n           ),\r\n+          IconButton(\r\n+            icon: const Icon(\r\n+              Icons.bookmark,\r\n+              color: Colors.white,\r\n+              semanticLabel: 'Bookmark',\r\n+            ),\r\n+            onPressed: () {\r\n+              _pdfViewerKey.currentState?.openBookmarkView();\r\n+            },\r\n+          ),\r\n         ],\r\n       ),\r\n       body: SfPdfViewer.file(\r\n         widget.book.filePath,\r\n+        key: _pdfViewerKey,\r\n         controller: _pdfViewerController,\r\n+        canShowScrollHead: true,\r\n         pageLayoutMode: PdfPageLayoutMode.single,\r\n         scrollDirection: PdfScrollDirection.horizontal,\r\n-        canShowPaginationDialog: true,\r\n         onPageChanged: (PdfPageChangedDetails details) {\r\n-          _saveLastPage(details.newPageNumber);\r\n+          widget.book.updateLastPageRead(details.newPageNumber);\r\n         },\r\n+        initialZoomLevel: 1.0,\r\n+        initialScrollOffset: Offset(0, widget.book.lastPageRead.toDouble()),\r\n+        onDocumentLoaded: (PdfDocumentLoadedDetails details) {\r\n+          _pdfViewerController.jumpToPage(widget.book.lastPageRead);\r\n+        },\r\n+        enableTextSelection: true,\r\n+        interactionMode: PdfInteractionMode.pan,\r\n       ),\r\n     );\r\n   }\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1728146362888,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,4 +1,6 @@\n+import 'dart:io';\r\n+\r\n import 'package:flutter/material.dart';\r\n import 'package:syncfusion_flutter_pdfviewer/pdfviewer.dart';\r\n import '../models/book.dart';\r\n \r\n@@ -48,9 +50,9 @@\n           ),\r\n         ],\r\n       ),\r\n       body: SfPdfViewer.file(\r\n-        widget.book.filePath,\r\n+        File(widget.book.filePath),\r\n         key: _pdfViewerKey,\r\n         controller: _pdfViewerController,\r\n         canShowScrollHead: true,\r\n         pageLayoutMode: PdfPageLayoutMode.single,\r\n"
                },
                {
                    "date": 1728146519958,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,4 @@\n-import 'dart:io';\r\n-\r\n import 'package:flutter/material.dart';\r\n import 'package:syncfusion_flutter_pdfviewer/pdfviewer.dart';\r\n import '../models/book.dart';\r\n \r\n@@ -50,9 +48,9 @@\n           ),\r\n         ],\r\n       ),\r\n       body: SfPdfViewer.file(\r\n-        File(widget.book.filePath),\r\n+        widget.book.filePath,\r\n         key: _pdfViewerKey,\r\n         controller: _pdfViewerController,\r\n         canShowScrollHead: true,\r\n         pageLayoutMode: PdfPageLayoutMode.single,\r\n@@ -60,14 +58,12 @@\n         onPageChanged: (PdfPageChangedDetails details) {\r\n           widget.book.updateLastPageRead(details.newPageNumber);\r\n         },\r\n         initialZoomLevel: 1.0,\r\n-        initialScrollOffset: Offset(0, widget.book.lastPageRead.toDouble()),\r\n         onDocumentLoaded: (PdfDocumentLoadedDetails details) {\r\n           _pdfViewerController.jumpToPage(widget.book.lastPageRead);\r\n         },\r\n         enableTextSelection: true,\r\n-        interactionMode: PdfInteractionMode.pan,\r\n       ),\r\n     );\r\n   }\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1728146888340,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,11 @@\n+import 'dart:io';\r\n+\r\n import 'package:flutter/material.dart';\r\n+import 'package:flutter/services.dart';\r\n import 'package:syncfusion_flutter_pdfviewer/pdfviewer.dart';\r\n import '../models/book.dart';\r\n+import 'package:syncfusion_flutter_pdfviewer/pdfviewer.dart';\r\n \r\n class PdfReaderWidget extends StatefulWidget {\r\n   final Book book;\r\n \r\n@@ -11,59 +15,122 @@\n   _PdfReaderWidgetState createState() => _PdfReaderWidgetState();\r\n }\r\n \r\n class _PdfReaderWidgetState extends State<PdfReaderWidget> {\r\n+  late PdfViewerController _pdfViewerController;\r\n+  late PdfTextSearchResult _searchResult;\r\n   final GlobalKey<SfPdfViewerState> _pdfViewerKey = GlobalKey();\r\n-  late PdfViewerController _pdfViewerController;\r\n-  bool _isNightMode = false;\r\n+  bool _isSearching = false;\r\n \r\n   @override\r\n   void initState() {\r\n+    _pdfViewerController = PdfViewerController();\r\n+    _searchResult = PdfTextSearchResult();\r\n     super.initState();\r\n-    _pdfViewerController = PdfViewerController();\r\n   }\r\n \r\n+  void _showContextMenu(BuildContext context, PdfTextSelectionChangedDetails details) {\r\n+    final OverlayState overlayState = Overlay.of(context);\r\n+    late OverlayEntry overlayEntry;\r\n+    overlayEntry = OverlayEntry(\r\n+      builder: (context) => Positioned(\r\n+        top: details.globalSelectedRegion?.center.dy ?? 0 - 55,\r\n+        left: details.globalSelectedRegion?.bottomLeft.dx ?? 0,\r\n+        child: ElevatedButton(\r\n+          child: Text('Copy', style: TextStyle(fontSize: 17)),\r\n+          onPressed: () {\r\n+            if (details.selectedText != null) {\r\n+              Clipboard.setData(ClipboardData(text: details.selectedText!));\r\n+            }\r\n+            _pdfViewerController.clearSelection();\r\n+            overlayEntry.remove();\r\n+          },\r\n+        ),\r\n+      ),\r\n+    );\r\n+    overlayState.insert(overlayEntry);\r\n+  }\r\n+\r\n   @override\r\n   Widget build(BuildContext context) {\r\n     return Scaffold(\r\n       appBar: AppBar(\r\n         title: Text(widget.book.title),\r\n         actions: <Widget>[\r\n           IconButton(\r\n-            icon: Icon(_isNightMode ? Icons.brightness_3 : Icons.brightness_7),\r\n+            icon: Icon(Icons.search),\r\n             onPressed: () {\r\n               setState(() {\r\n-                _isNightMode = !_isNightMode;\r\n+                _isSearching = true;\r\n               });\r\n+              _searchResult = _pdfViewerController.searchText('Flutter',\r\n+                  searchOption: TextSearchOption.caseSensitive);\r\n+              _searchResult.addListener(() {\r\n+                if (_searchResult.hasResult) {\r\n+                  setState(() {});\r\n+                }\r\n+              });\r\n             },\r\n           ),\r\n           IconButton(\r\n-            icon: const Icon(\r\n-              Icons.bookmark,\r\n-              color: Colors.white,\r\n-              semanticLabel: 'Bookmark',\r\n-            ),\r\n+            icon: Icon(Icons.bookmark),\r\n             onPressed: () {\r\n               _pdfViewerKey.currentState?.openBookmarkView();\r\n             },\r\n           ),\r\n         ],\r\n       ),\r\n-      body: SfPdfViewer.file(\r\n-        widget.book.filePath,\r\n-        key: _pdfViewerKey,\r\n-        controller: _pdfViewerController,\r\n-        canShowScrollHead: true,\r\n-        pageLayoutMode: PdfPageLayoutMode.single,\r\n-        scrollDirection: PdfScrollDirection.horizontal,\r\n-        onPageChanged: (PdfPageChangedDetails details) {\r\n-          widget.book.updateLastPageRead(details.newPageNumber);\r\n-        },\r\n-        initialZoomLevel: 1.0,\r\n-        onDocumentLoaded: (PdfDocumentLoadedDetails details) {\r\n-          _pdfViewerController.jumpToPage(widget.book.lastPageRead);\r\n-        },\r\n-        enableTextSelection: true,\r\n+      body: Stack(\r\n+        children: [\r\n+          SfPdfViewer.file(\r\n+            File(widget.book.filePath),\r\n+            controller: _pdfViewerController,\r\n+            key: _pdfViewerKey,\r\n+            canShowScrollHead: true,\r\n+            canShowScrollStatus: true,\r\n+            pageLayoutMode: PdfPageLayoutMode.single,\r\n+            scrollDirection: PdfScrollDirection.horizontal,\r\n+            onTextSelectionChanged: (PdfTextSelectionChangedDetails details) {\r\n+              if (details.selectedText != null && details.selectedText!.isNotEmpty) {\r\n+                _showContextMenu(context, details);\r\n+              }\r\n+            },\r\n+            onDocumentLoaded: (PdfDocumentLoadedDetails details) {\r\n+              _pdfViewerController.jumpToPage(widget.book.lastPageRead);\r\n+            },\r\n+            enableDocumentLinkAnnotation: true,\r\n+          ),\r\n+          if (_isSearching && _searchResult.hasResult)\r\n+            Positioned(\r\n+              bottom: 20,\r\n+              right: 20,\r\n+              child: Row(\r\n+                children: [\r\n+                  IconButton(\r\n+                    icon: Icon(Icons.arrow_upward),\r\n+                    onPressed: () {\r\n+                      _searchResult.previousInstance();\r\n+                    },\r\n+                  ),\r\n+                  IconButton(\r\n+                    icon: Icon(Icons.arrow_downward),\r\n+                    onPressed: () {\r\n+                      _searchResult.nextInstance();\r\n+                    },\r\n+                  ),\r\n+                  IconButton(\r\n+                    icon: Icon(Icons.clear),\r\n+                    onPressed: () {\r\n+                      setState(() {\r\n+                        _searchResult.clear();\r\n+                        _isSearching = false;\r\n+                      });\r\n+                    },\r\n+                  ),\r\n+                ],\r\n+              ),\r\n+            ),\r\n+        ],\r\n       ),\r\n     );\r\n   }\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1728146970321,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,8 @@\n import 'package:flutter/material.dart';\r\n import 'package:flutter/services.dart';\r\n import 'package:syncfusion_flutter_pdfviewer/pdfviewer.dart';\r\n import '../models/book.dart';\r\n-import 'package:syncfusion_flutter_pdfviewer/pdfviewer.dart';\r\n \r\n class PdfReaderWidget extends StatefulWidget {\r\n   final Book book;\r\n \r\n@@ -19,8 +18,9 @@\n   late PdfViewerController _pdfViewerController;\r\n   late PdfTextSearchResult _searchResult;\r\n   final GlobalKey<SfPdfViewerState> _pdfViewerKey = GlobalKey();\r\n   bool _isSearching = false;\r\n+  OverlayEntry? _overlayEntry;\r\n \r\n   @override\r\n   void initState() {\r\n     _pdfViewerController = PdfViewerController();\r\n@@ -29,26 +29,25 @@\n   }\r\n \r\n   void _showContextMenu(BuildContext context, PdfTextSelectionChangedDetails details) {\r\n     final OverlayState overlayState = Overlay.of(context);\r\n-    late OverlayEntry overlayEntry;\r\n-    overlayEntry = OverlayEntry(\r\n+    _overlayEntry?.remove();\r\n+    _overlayEntry = OverlayEntry(\r\n       builder: (context) => Positioned(\r\n-        top: details.globalSelectedRegion?.center.dy ?? 0 - 55,\r\n-        left: details.globalSelectedRegion?.bottomLeft.dx ?? 0,\r\n+        top: (details.globalSelectedRegion?.center.dy ?? 0) - 55,\r\n+        left: (details.globalSelectedRegion?.bottomLeft.dx ?? 0),\r\n         child: ElevatedButton(\r\n           child: Text('Copy', style: TextStyle(fontSize: 17)),\r\n           onPressed: () {\r\n-            if (details.selectedText != null) {\r\n-              Clipboard.setData(ClipboardData(text: details.selectedText!));\r\n-            }\r\n+            Clipboard.setData(ClipboardData(text: details.selectedText ?? ''));\r\n             _pdfViewerController.clearSelection();\r\n-            overlayEntry.remove();\r\n+            _overlayEntry?.remove();\r\n+            _overlayEntry = null;\r\n           },\r\n         ),\r\n       ),\r\n     );\r\n-    overlayState.insert(overlayEntry);\r\n+    overlayState.insert(_overlayEntry!);\r\n   }\r\n \r\n   @override\r\n   Widget build(BuildContext context) {\r\n@@ -61,10 +60,9 @@\n             onPressed: () {\r\n               setState(() {\r\n                 _isSearching = true;\r\n               });\r\n-              _searchResult = _pdfViewerController.searchText('Flutter',\r\n-                  searchOption: TextSearchOption.caseSensitive);\r\n+              _searchResult = _pdfViewerController.searchText('Flutter');\r\n               _searchResult.addListener(() {\r\n                 if (_searchResult.hasResult) {\r\n                   setState(() {});\r\n                 }\r\n@@ -91,8 +89,11 @@\n             scrollDirection: PdfScrollDirection.horizontal,\r\n             onTextSelectionChanged: (PdfTextSelectionChangedDetails details) {\r\n               if (details.selectedText != null && details.selectedText!.isNotEmpty) {\r\n                 _showContextMenu(context, details);\r\n+              } else {\r\n+                _overlayEntry?.remove();\r\n+                _overlayEntry = null;\r\n               }\r\n             },\r\n             onDocumentLoaded: (PdfDocumentLoadedDetails details) {\r\n               _pdfViewerController.jumpToPage(widget.book.lastPageRead);\r\n@@ -132,5 +133,12 @@\n         ],\r\n       ),\r\n     );\r\n   }\r\n+\r\n+  @override\r\n+  void dispose() {\r\n+    _pdfViewerController.dispose();\r\n+    _overlayEntry?.remove();\r\n+    super.dispose();\r\n+  }\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1728147403913,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,8 +19,9 @@\n   late PdfTextSearchResult _searchResult;\r\n   final GlobalKey<SfPdfViewerState> _pdfViewerKey = GlobalKey();\r\n   bool _isSearching = false;\r\n   OverlayEntry? _overlayEntry;\r\n+  final TextEditingController _searchController = TextEditingController();\r\n \r\n   @override\r\n   void initState() {\r\n     _pdfViewerController = PdfViewerController();\r\n@@ -28,28 +29,26 @@\n     super.initState();\r\n   }\r\n \r\n   void _showContextMenu(BuildContext context, PdfTextSelectionChangedDetails details) {\r\n-    final OverlayState overlayState = Overlay.of(context);\r\n-    _overlayEntry?.remove();\r\n-    _overlayEntry = OverlayEntry(\r\n-      builder: (context) => Positioned(\r\n-        top: (details.globalSelectedRegion?.center.dy ?? 0) - 55,\r\n-        left: (details.globalSelectedRegion?.bottomLeft.dx ?? 0),\r\n-        child: ElevatedButton(\r\n-          child: Text('Copy', style: TextStyle(fontSize: 17)),\r\n-          onPressed: () {\r\n-            Clipboard.setData(ClipboardData(text: details.selectedText ?? ''));\r\n-            _pdfViewerController.clearSelection();\r\n-            _overlayEntry?.remove();\r\n-            _overlayEntry = null;\r\n-          },\r\n-        ),\r\n-      ),\r\n-    );\r\n-    overlayState.insert(_overlayEntry!);\r\n+    // ... (keep the existing _showContextMenu implementation)\r\n   }\r\n \r\n+  void _performSearch() {\r\n+    final String searchQuery = _searchController.text.trim();\r\n+    if (searchQuery.isNotEmpty) {\r\n+      setState(() {\r\n+        _isSearching = true;\r\n+      });\r\n+      _searchResult = _pdfViewerController.searchText(searchQuery);\r\n+      _searchResult.addListener(() {\r\n+        if (_searchResult.hasResult) {\r\n+          setState(() {});\r\n+        }\r\n+      });\r\n+    }\r\n+  }\r\n+\r\n   @override\r\n   Widget build(BuildContext context) {\r\n     return Scaffold(\r\n       appBar: AppBar(\r\n@@ -57,17 +56,32 @@\n         actions: <Widget>[\r\n           IconButton(\r\n             icon: Icon(Icons.search),\r\n             onPressed: () {\r\n-              setState(() {\r\n-                _isSearching = true;\r\n-              });\r\n-              _searchResult = _pdfViewerController.searchText('Flutter');\r\n-              _searchResult.addListener(() {\r\n-                if (_searchResult.hasResult) {\r\n-                  setState(() {});\r\n-                }\r\n-              });\r\n+              showDialog(\r\n+                context: context,\r\n+                builder: (context) => AlertDialog(\r\n+                  title: Text('Search'),\r\n+                  content: TextField(\r\n+                    controller: _searchController,\r\n+                    decoration: InputDecoration(hintText: 'Enter search term'),\r\n+                    onSubmitted: (_) => _performSearch(),\r\n+                  ),\r\n+                  actions: [\r\n+                    TextButton(\r\n+                      child: Text('Cancel'),\r\n+                      onPressed: () => Navigator.of(context).pop(),\r\n+                    ),\r\n+                    TextButton(\r\n+                      child: Text('Search'),\r\n+                      onPressed: () {\r\n+                        Navigator.of(context).pop();\r\n+                        _performSearch();\r\n+                      },\r\n+                    ),\r\n+                  ],\r\n+                ),\r\n+              );\r\n             },\r\n           ),\r\n           IconButton(\r\n             icon: Icon(Icons.bookmark),\r\n@@ -103,32 +117,43 @@\n           if (_isSearching && _searchResult.hasResult)\r\n             Positioned(\r\n               bottom: 20,\r\n               right: 20,\r\n-              child: Row(\r\n-                children: [\r\n-                  IconButton(\r\n-                    icon: Icon(Icons.arrow_upward),\r\n-                    onPressed: () {\r\n-                      _searchResult.previousInstance();\r\n-                    },\r\n-                  ),\r\n-                  IconButton(\r\n-                    icon: Icon(Icons.arrow_downward),\r\n-                    onPressed: () {\r\n-                      _searchResult.nextInstance();\r\n-                    },\r\n-                  ),\r\n-                  IconButton(\r\n-                    icon: Icon(Icons.clear),\r\n-                    onPressed: () {\r\n-                      setState(() {\r\n-                        _searchResult.clear();\r\n-                        _isSearching = false;\r\n-                      });\r\n-                    },\r\n-                  ),\r\n-                ],\r\n+              child: Container(\r\n+                padding: EdgeInsets.all(8),\r\n+                decoration: BoxDecoration(\r\n+                  color: Colors.black54,\r\n+                  borderRadius: BorderRadius.circular(8),\r\n+                ),\r\n+                child: Row(\r\n+                  children: [\r\n+                    Text(\r\n+                      '${_searchResult.currentInstanceIndex + 1} of ${_searchResult.totalInstanceCount}',\r\n+                      style: TextStyle(color: Colors.white),\r\n+                    ),\r\n+                    IconButton(\r\n+                      icon: Icon(Icons.arrow_upward, color: Colors.white),\r\n+                      onPressed: () {\r\n+                        _searchResult.previousInstance();\r\n+                      },\r\n+                    ),\r\n+                    IconButton(\r\n+                      icon: Icon(Icons.arrow_downward, color: Colors.white),\r\n+                      onPressed: () {\r\n+                        _searchResult.nextInstance();\r\n+                      },\r\n+                    ),\r\n+                    IconButton(\r\n+                      icon: Icon(Icons.clear, color: Colors.white),\r\n+                      onPressed: () {\r\n+                        setState(() {\r\n+                          _searchResult.clear();\r\n+                          _isSearching = false;\r\n+                        });\r\n+                      },\r\n+                    ),\r\n+                  ],\r\n+                ),\r\n               ),\r\n             ),\r\n         ],\r\n       ),\r\n@@ -137,8 +162,9 @@\n \r\n   @override\r\n   void dispose() {\r\n     _pdfViewerController.dispose();\r\n+    _searchController.dispose();\r\n     _overlayEntry?.remove();\r\n     super.dispose();\r\n   }\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1728165729173,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,9 +28,10 @@\n     _searchResult = PdfTextSearchResult();\r\n     super.initState();\r\n   }\r\n \r\n-  void _showContextMenu(BuildContext context, PdfTextSelectionChangedDetails details) {\r\n+  void _showContextMenu(\r\n+      BuildContext context, PdfTextSelectionChangedDetails details) {\r\n     // ... (keep the existing _showContextMenu implementation)\r\n   }\r\n \r\n   void _performSearch() {\r\n@@ -47,8 +48,73 @@\n       });\r\n     }\r\n   }\r\n \r\n+  void _addBookmark() {\r\n+    final currentPage = _pdfViewerController.pageNumber;\r\n+    showDialog(\r\n+      context: context,\r\n+      builder: (context) => AlertDialog(\r\n+        title: Text('Add Bookmark'),\r\n+        content: TextField(\r\n+          decoration: InputDecoration(hintText: 'Enter bookmark description'),\r\n+          onSubmitted: (description) {\r\n+            Navigator.of(context).pop();\r\n+            widget.book.addBookmark(currentPage, description);\r\n+            widget.bookService.updateBookMetadata(widget.book);\r\n+          },\r\n+        ),\r\n+        actions: [\r\n+          TextButton(\r\n+            child: Text('Cancel'),\r\n+            onPressed: () => Navigator.of(context).pop(),\r\n+          ),\r\n+          TextButton(\r\n+            child: Text('Add'),\r\n+            onPressed: () {\r\n+              Navigator.of(context).pop();\r\n+              // Add bookmark logic here\r\n+            },\r\n+          ),\r\n+        ],\r\n+      ),\r\n+    );\r\n+  }\r\n+\r\n+  void _showBookmarks() {\r\n+    showDialog(\r\n+      context: context,\r\n+      builder: (context) => AlertDialog(\r\n+        title: Text('Bookmarks'),\r\n+        content: Container(\r\n+          width: double.maxFinite,\r\n+          child: ListView.builder(\r\n+            itemCount: widget.book.sortedBookmarks.length,\r\n+            itemBuilder: (context, index) {\r\n+              final bookmark = widget.book.sortedBookmarks[index];\r\n+              return ListTile(\r\n+                title: Text('Page ${bookmark.pageNumber}: ${bookmark.description}'),\r\n+                onTap: () {\r\n+                  Navigator.of(context).pop();\r\n+                  _pdfViewerController.jumpToPage(bookmark.pageNumber);\r\n+                },\r\n+                trailing: IconButton(\r\n+                  icon: Icon(Icons.delete),\r\n+                  onPressed: () {\r\n+                    widget.book.removeBookmark(bookmark.pageNumber);\r\n+                    widget.bookService.updateBookMetadata(widget.book);\r\n+                    setState(() {});\r\n+                  },\r\n+                ),\r\n+              );\r\n+            },\r\n+          ),\r\n+        ),\r\n+      ),\r\n+    );\r\n+  }\r\n+\r\n+\r\n   @override\r\n   Widget build(BuildContext context) {\r\n     return Scaffold(\r\n       appBar: AppBar(\r\n@@ -77,8 +143,16 @@\n                         Navigator.of(context).pop();\r\n                         _performSearch();\r\n                       },\r\n                     ),\r\n+                    IconButton(\r\n+            icon: Icon(Icons.bookmark_add),\r\n+            onPressed: _addBookmark,\r\n+          ),\r\n+          IconButton(\r\n+            icon: Icon(Icons.bookmark),\r\n+            onPressed: _showBookmarks,\r\n+          ),\r\n                   ],\r\n                 ),\r\n               );\r\n             },\r\n@@ -101,9 +175,10 @@\n             canShowScrollStatus: true,\r\n             pageLayoutMode: PdfPageLayoutMode.single,\r\n             scrollDirection: PdfScrollDirection.horizontal,\r\n             onTextSelectionChanged: (PdfTextSelectionChangedDetails details) {\r\n-              if (details.selectedText != null && details.selectedText!.isNotEmpty) {\r\n+              if (details.selectedText != null &&\r\n+                  details.selectedText!.isNotEmpty) {\r\n                 _showContextMenu(context, details);\r\n               } else {\r\n                 _overlayEntry?.remove();\r\n                 _overlayEntry = null;\r\n@@ -166,5 +241,5 @@\n     _searchController.dispose();\r\n     _overlayEntry?.remove();\r\n     super.dispose();\r\n   }\r\n-}\n\\ No newline at end of file\n+}\r\n"
                },
                {
                    "date": 1728165789998,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -143,26 +143,20 @@\n                         Navigator.of(context).pop();\r\n                         _performSearch();\r\n                       },\r\n                     ),\r\n-                    IconButton(\r\n-            icon: Icon(Icons.bookmark_add),\r\n-            onPressed: _addBookmark,\r\n-          ),\r\n-          IconButton(\r\n-            icon: Icon(Icons.bookmark),\r\n-            onPressed: _showBookmarks,\r\n-          ),\r\n                   ],\r\n                 ),\r\n               );\r\n             },\r\n           ),\r\n           IconButton(\r\n+            icon: Icon(Icons.bookmark_add),\r\n+            onPressed: _addBookmark,\r\n+          ),\r\n+          IconButton(\r\n             icon: Icon(Icons.bookmark),\r\n-            onPressed: () {\r\n-              _pdfViewerKey.currentState?.openBookmarkView();\r\n-            },\r\n+            onPressed: _showBookmarks,\r\n           ),\r\n         ],\r\n       ),\r\n       body: Stack(\r\n"
                },
                {
                    "date": 1728165887627,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -91,9 +91,10 @@\n             itemCount: widget.book.sortedBookmarks.length,\r\n             itemBuilder: (context, index) {\r\n               final bookmark = widget.book.sortedBookmarks[index];\r\n               return ListTile(\r\n-                title: Text('Page ${bookmark.pageNumber}: ${bookmark.description}'),\r\n+                title: Text(\r\n+                    'Page ${bookmark.pageNumber}: ${bookmark.description}'),\r\n                 onTap: () {\r\n                   Navigator.of(context).pop();\r\n                   _pdfViewerController.jumpToPage(bookmark.pageNumber);\r\n                 },\r\n@@ -112,9 +113,8 @@\n       ),\r\n     );\r\n   }\r\n \r\n-\r\n   @override\r\n   Widget build(BuildContext context) {\r\n     return Scaffold(\r\n       appBar: AppBar(\r\n@@ -180,8 +180,12 @@\n             },\r\n             onDocumentLoaded: (PdfDocumentLoadedDetails details) {\r\n               _pdfViewerController.jumpToPage(widget.book.lastPageRead);\r\n             },\r\n+            onPageChanged: (PdfPageChangedDetails details) {\r\n+              widget.book.updateLastPageRead(details.newPageNumber);\r\n+              widget.bookService.updateBookMetadata(widget.book);\r\n+            },\r\n             enableDocumentLinkAnnotation: true,\r\n           ),\r\n           if (_isSearching && _searchResult.hasResult)\r\n             Positioned(\r\n"
                },
                {
                    "date": 1728166677087,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,15 +1,16 @@\n import 'dart:io';\r\n \r\n import 'package:flutter/material.dart';\r\n-import 'package:flutter/services.dart';\r\n import 'package:syncfusion_flutter_pdfviewer/pdfviewer.dart';\r\n import '../models/book.dart';\r\n+import '../services/book_service.dart'; // Add this line\r\n \r\n class PdfReaderWidget extends StatefulWidget {\r\n   final Book book;\r\n+  final BookService bookService; // Add this line\r\n \r\n-  const PdfReaderWidget({Key? key, required this.book}) : super(key: key);\r\n+  const PdfReaderWidget({Key? key, required this.book, required this.bookService}) : super(key: key);\r\n \r\n   @override\r\n   _PdfReaderWidgetState createState() => _PdfReaderWidgetState();\r\n }\r\n"
                },
                {
                    "date": 1728167032404,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -168,9 +168,9 @@\n             key: _pdfViewerKey,\r\n             canShowScrollHead: true,\r\n             canShowScrollStatus: true,\r\n             pageLayoutMode: PdfPageLayoutMode.single,\r\n-            scrollDirection: PdfScrollDirection.horizontal,\r\n+            scrollDirection: PdfScrollDirection.vertical,\r\n             onTextSelectionChanged: (PdfTextSelectionChangedDetails details) {\r\n               if (details.selectedText != null &&\r\n                   details.selectedText!.isNotEmpty) {\r\n                 _showContextMenu(context, details);\r\n"
                },
                {
                    "date": 1728167082986,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -167,9 +167,8 @@\n             controller: _pdfViewerController,\r\n             key: _pdfViewerKey,\r\n             canShowScrollHead: true,\r\n             canShowScrollStatus: true,\r\n-            pageLayoutMode: PdfPageLayoutMode.single,\r\n             scrollDirection: PdfScrollDirection.vertical,\r\n             onTextSelectionChanged: (PdfTextSelectionChangedDetails details) {\r\n               if (details.selectedText != null &&\r\n                   details.selectedText!.isNotEmpty) {\r\n"
                }
            ],
            "date": 1728145991893,
            "name": "Commit-0",
            "content": "import 'dart:async';\r\nimport 'package:flutter/material.dart';\r\nimport 'package:syncfusion_flutter_pdfviewer/pdfviewer.dart';\r\nimport 'package:shared_preferences/shared_preferences.dart';\r\nimport '../models/book.dart';\r\n\r\nclass PdfReaderWidget extends StatefulWidget {\r\n  final Book book;\r\n\r\n  const PdfReaderWidget({Key? key, required this.book}) : super(key: key);\r\n\r\n  @override\r\n  _PdfReaderWidgetState createState() => _PdfReaderWidgetState();\r\n}\r\n\r\nclass _PdfReaderWidgetState extends State<PdfReaderWidget> {\r\n  late PdfViewerController _pdfViewerController;\r\n  bool _nightMode = false;\r\n\r\n  @override\r\n  void initState() {\r\n    super.initState();\r\n    _pdfViewerController = PdfViewerController();\r\n    _loadLastPage();\r\n    _loadNightMode();\r\n  }\r\n\r\n  Future<void> _loadLastPage() async {\r\n    final prefs = await SharedPreferences.getInstance();\r\n    final lastPage = prefs.getInt('lastPage_${widget.book.id}') ?? 1;\r\n    _pdfViewerController.jumpToPage(lastPage);\r\n  }\r\n\r\n  Future<void> _saveLastPage(int page) async {\r\n    final prefs = await SharedPreferences.getInstance();\r\n    await prefs.setInt('lastPage_${widget.book.id}', page);\r\n    widget.book.updateLastPageRead(page);\r\n  }\r\n\r\n  Future<void> _loadNightMode() async {\r\n    final prefs = await SharedPreferences.getInstance();\r\n    setState(() {\r\n      _nightMode = prefs.getBool('nightMode') ?? false;\r\n    });\r\n  }\r\n\r\n  Future<void> _saveNightMode(bool nightMode) async {\r\n    final prefs = await SharedPreferences.getInstance();\r\n    await prefs.setBool('nightMode', nightMode);\r\n  }\r\n\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return Scaffold(\r\n      appBar: AppBar(\r\n        title: Text(widget.book.title),\r\n        actions: [\r\n          IconButton(\r\n            icon: Icon(_nightMode ? Icons.brightness_3 : Icons.brightness_7),\r\n            onPressed: () {\r\n              setState(() {\r\n                _nightMode = !_nightMode;\r\n                _saveNightMode(_nightMode);\r\n              });\r\n            },\r\n          ),\r\n        ],\r\n      ),\r\n      body: SfPdfViewer.file(\r\n        widget.book.filePath,\r\n        controller: _pdfViewerController,\r\n        pageLayoutMode: PdfPageLayoutMode.single,\r\n        scrollDirection: PdfScrollDirection.horizontal,\r\n        canShowPaginationDialog: true,\r\n        onPageChanged: (PdfPageChangedDetails details) {\r\n          _saveLastPage(details.newPageNumber);\r\n        },\r\n      ),\r\n    );\r\n  }\r\n}"
        }
    ]
}